#!/usr/bin/env node
/* eslint-disable @typescript-eslint/no-require-imports */

const fs = require("fs-extra");
const minimist = require("minimist");
const { marked } = require("marked");
const yaml = require("yaml");
const cp = require("cross-spawn");

const argv = minimist(process.argv.slice(2));
const themeName = argv._[0].includes("hexo-theme") ? argv._[0] : "hexo-theme-" + argv._[0];
const baseConfig = yaml.parse(fs.readFileSync("_config.base.yml", "utf-8"));

console.log("Switching theme to", themeName);

const themeBaseConfigFile = `_config.base.${themeName}.yml`;
const currentThemeFile = "tmp/last_theme_name.txt";
let previousTheme = null;

// Ensure the `tmp` directory exists
fs.ensureDirSync("tmp");

// Check if the previous theme exists
if (fs.existsSync(currentThemeFile)) {
  previousTheme = fs.readFileSync(currentThemeFile, "utf-8").trim();
}

if (fs.existsSync(themeBaseConfigFile)) {
  const themeConfig = yaml.parse(fs.readFileSync(themeBaseConfigFile, "utf-8"));
  const config = Object.assign(baseConfig, themeConfig);
  config.theme = themeName; // Update theme
  if (!config.renderers) config.renderers = {};
  // --renderers=nunjucks,markdown-it
  if (argv.renderers) {
    config.renderers.engines = argv.renderers.split(",");
    console.log("renderers", config.renderers.engines, "applied");
  }
  fs.writeFileSync("_config.yml", yaml.stringify(config));
}

const readmeContent = fs.readFileSync(`themes/${themeName}/readme.md`, "utf-8");
const htmlContent = marked(readmeContent);
fs.writeFileSync(
  "source/index.md",
  ["---", `title: ${themeName}`, `description: HexoJS theme - ${themeName}`, "---", "", "", htmlContent].join("\n")
);

// If the theme has changed, update config and perform hexo clean
if (previousTheme !== themeName) {
  console.log("Theme has changed. Cleaning Hexo...");

  // Run hexo clean command
  cp.spawnSync("hexo", ["clean"], { stdio: "inherit" });

  // Update current theme file
  fs.writeFileSync(currentThemeFile, themeName);
} else {
  console.log("Theme has not changed. Skipping Hexo clean.");
}
